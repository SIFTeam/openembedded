--- a/main.c	2012-04-12 15:42:13.000000000 +0200
+++ b/main.c	2012-04-12 22:51:53.000000000 +0200
@@ -83,8 +83,8 @@
 void (*resize)(unsigned char *source, unsigned char *dest, int xsource, int ysource, int xdest, int ydest, int colors);
 void combine(unsigned char *output, unsigned char *video, unsigned char *osd, int vleft, int vtop, int vwidth, int vheight, int xres, int yres);
 
-enum {UNKNOWN,PALLAS,VULCAN,XILLEON,BRCM7400,BRCM7401,BRCM7405,BRCM7335};
-char *stb_name[]={"unknown","Pallas","Vulcan","Xilleon","Brcm7400","Brcm7401","Brcm7405","Brcm7335"};
+enum {UNKNOWN,PALLAS,VULCAN,XILLEON,BRCM7400,BRCM7401,BRCM7405,BRCM7335,AZBOX863x,AZBOX865x};
+char *stb_name[]={"unknown","Pallas","Vulcan","Xilleon","Brcm7400","Brcm7401","Brcm7405","Brcm7335","Azbox863x","Azbox865x"};
 int stb_type=UNKNOWN;
 
 // main program
@@ -125,6 +125,9 @@
 		if (strcasestr(buf,"PALLAS")) stb_type=PALLAS;
 		if (strcasestr(buf,"XILLEON")) stb_type=XILLEON;
 		if (strcasestr(buf,"BCM7401") || strcasestr(buf,"BCMFB")) stb_type=BRCM7401;
+		if (strcasestr(buf,"EM863x")) stb_type=AZBOX863x;
+		if (strcasestr(buf,"EM865x")) stb_type=AZBOX865x;
+
 	}
 	pclose(pipe);
 
@@ -1001,6 +1004,129 @@
 		memcpy (chroma, memory_tmp + 16 + stride * res, stride * res);
 		
 		free(memory_tmp);
+	} else if (stb_type == AZBOX863x || stb_type == AZBOX865x)
+	{
+
+		unsigned char *lyuv = 0, *ptr;
+		int fd, len = 0, x, y;
+		unsigned int  chroma_w, chroma_h;
+		unsigned int  luma_w, luma_h;
+		unsigned int  luma_width, chroma_width;
+		unsigned int  luma_size_tile, chroma_size_tile, MemStart;
+		unsigned char  *pluma;
+		unsigned char  *pchroma;
+
+		fd = open("/dev/frameyuv",O_RDWR);
+		if(!fd)
+		{
+			perror("/dev/frameyuv");  
+			close(mem_fd);              
+			return; 
+		}
+
+		memory_tmp = (unsigned char *)malloc(1920*1080*4);  
+		len = read(fd,memory_tmp,1920*1080*4); 
+
+		if(len <= 0 ) 
+		{
+			printf("No picture info %d\n",len);
+			free(memory_tmp);
+			close(fd);
+			close(mem_fd);
+			return;
+		}
+               
+		luma_w = (memory_tmp[0]<<24) | (memory_tmp[1]<<16) | (memory_tmp[2]<<8) | (memory_tmp[3]);  
+		luma_h = (memory_tmp[4]<<24) | (memory_tmp[5]<<16) | (memory_tmp[6]<<8) | (memory_tmp[7]);  
+		luma_width = (memory_tmp[8]<<24) | (memory_tmp[9]<<16) | (memory_tmp[10]<<8) | (memory_tmp[11]);  
+		chroma_w = (memory_tmp[12]<<24) | (memory_tmp[13]<<16) | (memory_tmp[14]<<8) | (memory_tmp[15]);  
+		chroma_h = (memory_tmp[16]<<24) | (memory_tmp[17]<<16) | (memory_tmp[18]<<8) | (memory_tmp[19]);  
+		chroma_width = (memory_tmp[20]<<24) | (memory_tmp[21]<<16) | (memory_tmp[22]<<8) | (memory_tmp[23]); 
+
+		if(stb_type == AZBOX863x) 
+		{
+
+	 	       luma_size_tile  = (((luma_w + 127)/128)*128) *  (((luma_h + 31)/32)*32);
+	               chroma_size_tile        = (((chroma_w + 127)/128)*128) * (((chroma_h + 31)/32)*32); 
+            	} else 
+		{
+ 
+		       luma_size_tile  = (((luma_w + 255)/256)*256) *  (((luma_h + 31)/32)*32);
+	               chroma_size_tile        = (((chroma_w + 255)/256)*256) * (((chroma_h + 31)/32)*32); 
+    	        }               
+	        pluma = memory_tmp + 24;
+	        pchroma = memory_tmp + 24 + luma_size_tile;
+
+		luma = (unsigned char *)malloc(luma_w * luma_h);     
+	        chroma = (unsigned char *)malloc(chroma_w * chroma_h * 2);                    
+
+		stride = luma_w;
+		res = luma_h;                                
+		ptr = luma;
+
+		if(stb_type == AZBOX863x) 
+		{ 
+	                /* save the luma buffer Y */
+	               for (y = 0 ; y < luma_h ; y++) 
+		       {
+	                 	for (x = 0 ; x < luma_w ; x++) 
+				{
+                        		unsigned char* pixel = (pluma +\
+		                        (x/128) * 4096 + (y/32) * luma_width * 32 +
+                        		(x % 128) + (y % 32)*128);
+
+		                        *ptr++ = *pixel;
+	                        }
+	               }
+
+		ptr = chroma;
+
+              	       /* break chroma buffer into U & V components */
+	               for (y = 0 ; y < chroma_h ; y++) 
+		       {
+        	               for (x = 0 ; x < chroma_w*2 ; x++) 
+			       {
+					unsigned char* pixel = (pchroma +\
+		                        (x/128) * 4096 + (y/32) * chroma_width * 32 +
+	                                (x % 128) + (y % 32)*128);
+	
+        			        *ptr++ = *pixel;
+        		       }
+	               }
+		} else if(stb_type == AZBOX865x) 
+		{
+
+              		/* save the luma buffer Y */
+	               for (y = 0 ; y < luma_h ; y++) 
+		       {
+        		         for (x = 0 ; x < luma_w ; x++) 
+				 {
+		                        unsigned char* pixel = (pluma +\
+                		        (x/256) * 8192 + (y/32) * luma_width * 32 +
+                		        (x % 256) + (y % 32)*256);
+
+					*ptr++ = *pixel;
+                	         }
+                       }
+		ptr = chroma;
+
+               		/* break chroma buffer into U & V components */
+              	       for (y = 0 ; y < chroma_h ; y++) 
+		       {
+                     		 for (x = 0 ; x < chroma_w*2 ; x++) 
+				 {
+	                               unsigned char* pixel = (pchroma +\
+        		               (x/256) * 8192 + (y/32) * chroma_width * 32 +
+	                               (x % 256) + (y % 32)*256);
+
+			                *ptr++ = *pixel;
+		                 }      
+	              }         
+		}
+		
+		free(memory_tmp);            
+		close(fd);
+
 	}
 
 	close(mem_fd);	
