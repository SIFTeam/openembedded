diff -Naur a/lib/python/Components/Harddisk.py b/lib/python/Components/Harddisk.py
--- a/lib/python/Components/Harddisk.py	2012-08-07 14:07:42.000000000 +0200
+++ b/lib/python/Components/Harddisk.py	2012-08-29 21:22:13.000000000 +0200
@@ -6,6 +6,7 @@
 from SystemInfo import SystemInfo
 from Components.Console import Console
 import Task
+from Tools.HardwareInfo import HardwareInfo
 
 def readFile(filename):
 	file = open(filename)
@@ -118,7 +119,11 @@
 		elif self.type == DEVTYPE_DEVFS:
 			ide_cf = self.device[:2] == "hd" and "host0" not in self.dev_path
 
-		internal = "pci" in self.phys_path
+		hw_type = HardwareInfo().get_device_name()
+		if hw_type == 'elite' or hw_type == 'premium' or hw_type == 'premium+' or hw_type == 'ultra' :
+			internal = "ide" in self.phys_path
+		else:
+			internal = "pci" in self.phys_path
 
 		if ide_cf:
 			ret = "External (CF)"
@@ -669,6 +674,9 @@
 				physdev = dev
 				print "couldn't determine blockdev physdev for device", device
 		error, blacklisted, removable, is_cdrom, partitions, medium_found = self.getBlockDevInfo(device)
+		hw_type = HardwareInfo().get_device_name()
+		if hw_type == 'elite' or hw_type == 'premium' or hw_type == 'premium+' or hw_type == 'ultra' :
+			if device[0:3] == "hda": blacklisted = True
 		if not blacklisted and medium_found:
 			description = self.getUserfriendlyDeviceName(device, physdev)
 			p = Partition(mountpoint = self.getMountpoint(device), description = description, force_mounted = True, device = device)
diff -Naur a/lib/python/Components/RcModel.py b/lib/python/Components/RcModel.py
--- a/lib/python/Components/RcModel.py	2012-08-08 16:53:31.000000000 +0200
+++ b/lib/python/Components/RcModel.py	2012-08-09 00:00:21.000000000 +0200
@@ -6,6 +6,8 @@
 	RCTYPE_ET6X00 = 2
 	RCTYPE_ET9500 = 3
 	RCTYPE_VU = 4
+	RCTYPE_AZHD = 50
+	RCTYPE_AZMe = 51
 
 	def __init__(self):
 		self.currentRcType = self.RCTYPE_DMM
@@ -41,6 +43,14 @@
 					self.currentRcType = self.RCTYPE_ET9500
 		elif os.path.exists('/proc/stb/info/vumodel'):
 			self.currentRcType = self.RCTYPE_VU
+		elif os.path.exists('/proc/stb/info/azmodel'):
+			f = open("/proc/stb/info/model",'r')
+			model = f.readline().strip()
+			f.close()
+			if model == "elite" or model == "premium" or model == "premium+" or model == "ultra":
+				self.currentRcType = self.RCTYPE_AZHD
+			elif model == "me" or model == "minime":
+				self.currentRcType = self.RCTYPE_AZMe
 
 	def getRcLocation(self):
 		if self.currentRcType == self.RCTYPE_ET9X00:
@@ -51,5 +61,9 @@
 			return '/usr/share/enigma2/rc_models/et6x00/'
 		elif self.currentRcType == self.RCTYPE_VU:
 			return '/usr/share/enigma2/rc_models/vu/'
+		elif self.currentRcType == self.RCTYPE_AZHD:
+			return '/usr/share/enigma2/rc_models/azhd/'
+		elif self.currentRcType == self.RCTYPE_AZMe:
+			return '/usr/share/enigma2/rc_models/azme/'
 
 rc_model = RcModel()
